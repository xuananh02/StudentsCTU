@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}


<h3 class="text-lg font-semibold my-4">@ViewData["Title"]</h3>

<partial name="_StatusMessage" for="StatusMessage" />
<div class="">
    <div class="">
        <form id="profile-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <label asp-for="Username" class="input input-bordered input-sm flex items-center gap-2">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 opacity-70"><path d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z" /><path d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z" /></svg>
                    <input asp-for="Username" class="grow w-full"  placeholder="Please choose your username." disabled />
                </label>
            </div>

            <div class="my-4">
                <label asp-for="Input.PhoneNumber" class="input input-bordered input-sm flex items-center gap-2">
                    <input asp-for="Input.PhoneNumber" class="grow w-full" placeholder="Please enter your phone number" />
                </label>
                <span asp-validation-for="Input.PhoneNumber" class="error"></span>
            </div>

            <div class="my-4">
                <label asp-for="Input.Birthday" class="input input-bordered input-sm flex items-center gap-2">
                    <input asp-for="Input.Birthday" class="grow w-full" placeholder="Please enter your Birdthday." />
                </label>
                <span asp-validation-for="Input.Birthday" class="error"></span>
            </div>

            <div class="my-4">
                <label asp-for="Input.PictureUrl" class="input input-bordered input-sm flex items-center gap-2">
                    <input asp-for="Input.PictureUrl" class="grow w-full" placeholder="Please enter your PictureUrl." />
                </label>
                <span asp-validation-for="Input.PictureUrl" class="error"></span>
            </div>

            <div class="my-4">
                <label asp-for="Input.CoverPictureUrl" class="input input-bordered input-sm flex items-center gap-2">
                    <input asp-for="Input.CoverPictureUrl" class="grow w-full" placeholder="Please enter your CoverPictureUrl." />
                </label>
                <span asp-validation-for="Input.CoverPictureUrl" class="error"></span>
            </div>

            <div class="my-4">
                <label asp-for="Input.Gender" class="input input-bordered input-sm flex items-center gap-2">
                    <input asp-for="Input.Gender" class="grow w-full" placeholder="Please enter your Gender." />
                </label>
                <span asp-validation-for="Input.Gender" class="error"></span>
            </div>

            <div class="my-4">
                <label asp-for="Input.AboutMe" class="input input-bordered input-sm flex items-center gap-2">
                    <input asp-for="Input.AboutMe" class="grow w-full" placeholder="Please enter your AboutMe." />
                </label>
                <span asp-validation-for="Input.AboutMe" class="error"></span>
            </div>

            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary my-4">Save</button>
        </form>

        <div >
            
            <div class="my-4">
                <label asp-for="Input.UserId" class="input input-bordered input-sm flex items-center gap-2">
                    <input id="UserId" name="userId" asp-for="Input.UserId" class="grow w-full" placeholder="Please enter your UserId." disabled />
                </label>
            </div>

            <div class="my-4">
                <select id="Country" class="select select-bordered w-full max-w-xs" asp-items="new SelectList(Model.Input.Locations.Select(item => item.Country).Distinct())">
                    <option disabled selected>Country</option>
                </select>
            </div>

            <div class="my-4">
                <select id="City" class="select select-bordered w-full max-w-xs" >
                    <option disabled selected>City</option>
                </select>
            </div>

            <button id="update-location" class="w-100 btn btn-lg btn-primary my-4">Save Location</button>
            <div id="response" class="success"></div>

        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Function to populate city dropdown based on the selected country
        document.getElementById("Country").addEventListener("change", function () {
            var selectedCountry = this.value;

            console.log(this.value);
            var cityDropdown = document.getElementById("City");

            // Clear existing options
            cityDropdown.innerHTML = '';

            // Add a default option
            var defaultOption = document.createElement("option");
            defaultOption.text = "City";
            defaultOption.disabled = true;
            defaultOption.selected = true;
            cityDropdown.appendChild(defaultOption);

            // Send the selected country value to the server
            fetch('/api/ApiLocations/' + selectedCountry)
                .then(response => response.json())
                .then(cities => {
                    cities.forEach(function (city) {
                        var option = document.createElement("option");
                        option.text = city;
                        cityDropdown.appendChild(option);
                    });
                });
        });

        document.getElementById("update-location").addEventListener("click", async function () {
            var User = document.getElementById("UserId");
            var Country = document.getElementById("Country");
            var City = document.getElementById("City");

            var data = {
                userId: User.value,
                country: Country.value,
                city: City.value
            };

            // Define the options for the fetch request
            var options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            };

            try {
                // Send the POST request to the server
                const response = await fetch('/api/LocationsApi', options);

                if (response.ok) {
                    // If the request was successful, read and display the response
                    const responseData = "Success";

                    document.getElementById('response').innerText = responseData;
                    
                    setTimeout(() => {
                        document.getElementById('response').innerText = "";
                    }, 2000);
                    
                    
                } else {
                    // If the request was not successful, display the error status
                    document.getElementById('response').innerText = 'Error: ' + response.status;
                }
            } catch (error) {
                // If an error occurs, display the error message
                document.getElementById('response').innerText = 'Error: ' + error.message;
            }

        });

        var locationId = @Html.Raw(Json.Serialize(Model.Input.LocationId));

        fetch('/api/LocationsApi/' + locationId)
            .then(response => response.json())
            .then(location => {
                var event = new Event('change');
                var country = document.getElementById("Country")
                country.value = location.country;
                country.dispatchEvent(event);
                
                document.getElementById("City").value = location.city;
            });

    </script>
}
